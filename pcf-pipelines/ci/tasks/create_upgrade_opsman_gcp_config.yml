---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: pcfnorm/rootfs

outputs:
- name: upgrade_opsman_gcp_config

params:
  PIVNET_TOKEN:
  OPSMAN_ADMIN_USERNAME:
  OPSMAN_ADMIN_PASSWORD:
  OPSMAN_DOMAIN_OR_IP_ADDRESS:
  OPSMAN_TIMEOUT_SECONDS:
  OPSMAN_MAJOR_MINOR_VERSION:
  CHECK_NEW_OPSMAN_EVERY:
  EXISTING_OPSMAN_VM_NAME:
  OPSMAN_PROJECT:
  OPSMAN_ZONE:
  OPSMAN_DISKIMAGE_NAME:
  OPSMAN_GCP_CREDFILE_CONTENTS:

run:
  path: bash
  args:
  - -ce
  - |
    cat > upgrade_opsman_gcp_config/params.yml <<EOF
    check_new_opsman_every: "$CHECK_NEW_OPSMAN_EVERY"
    opsman_major_minor_version: "$OPSMAN_MAJOR_MINOR_VERSION"
    pivnet_token: "$PIVNET_TOKEN"
    existing_opsman_vm_name: "$EXISTING_OPSMAN_VM_NAME"

    opsman_client_id: "$OPSMAN_CLIENT_ID"
    opsman_client_secret: "$OPSMAN_CLIENT_SECRET"
    opsman_admin_password: "$OPSMAN_ADMIN_PASSWORD"
    opsman_admin_username: "$OPSMAN_ADMIN_USERNAME"
    opsman_passphrase: "$OPSMAN_ADMIN_PASSWORD"
    opsman_timeout_seconds: "$OPSMAN_TIMEOUT_SECONDS"
    opsman_domain_or_ip_address: "$OPSMAN_DOMAIN_OR_IP_ADDRESS"

    opsman_gcp_project: "$OPSMAN_PROJECT"
    opsman_gcp_zone: "$OPSMAN_ZONE"
    opsman_gcp_diskimage_name: "$OPSMAN_DISKIMAGE_NAME"
    pivnet_image_region: us
    EOF

    # This is necessary to preserve the whitespace we need in the YAML document
    # we're constructing.
    #
    # The way it works is by writing out the line containing the key we want to
    # specify, which contains the YAML block scalar indicator, "|". Then we set
    # the internal field separator to the newline character so we can then
    # iterate on each line in the GCP credfile variable, writing each line out
    # with two spaces in front.
    echo "opsman_gcp_credfile_contents: |" >> upgrade_opsman_gcp_config/params.yml
    IFS=$'\n'
    for line in $OPSMAN_GCP_CREDFILE_CONTENTS; do
      echo "  $line" >> upgrade_opsman_gcp_config/params.yml
    done
